@model dvvWeb.Models.ConfigModel

@{
    ViewBag.Title = "Configuration";
}
        <h2>Configuration</h2>
        <hr />
<article>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        

        <div class="form-group">
            @Html.LabelFor(model => model.Servername, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Servername)
                @Html.ValidationMessageFor(model => model.Servername)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DbName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DbName)
                @Html.ValidationMessageFor(model => model.DbName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preferences.NumberOfPoints, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Preferences.NumberOfPoints)
                @Html.ValidationMessageFor(model => model.Preferences.NumberOfPoints)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preferences.PollingFrequency, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Preferences.PollingFrequency)
                @Html.ValidationMessageFor(model => model.Preferences.PollingFrequency)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
    </article>

<aside>
    <h3>What are these?</h3>
    <ul>
        <li>
            <h6>Server Name</h6>
            The SQL Server instance that will be queried.
        </li>
        <li>
            <h6>Database Name</h6>
            The initial catalog that queries will be executed against. This can be overriden using "USE" statements in custom queries.
        </li>
        <li>
            <h6>Number of Points</h6>
            The number of data points that will be displayed before rolling off. 200 is a good place to start.
        </li>
        <li>
            <h6>Polling Frequency</h6>
            The number of seconds between each time the database is sampled. 10 is a good place to start.
        </li>
    </ul>
</aside>

@section Scripts {
    <script>
        $(document).ready(function () {
            my.Views.Config.init();
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
